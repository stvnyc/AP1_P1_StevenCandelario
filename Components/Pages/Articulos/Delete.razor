@page "/Articulo/Delete/{ArticuloId:int}"

@inject ArticuloService articuloService
@inject NavigationManager Navigation

<PageTitle>Delete Articulo</PageTitle>

<Toasts class="p-3" Messages="messages" AutoHide="true" Delay="6000" Placement="ToastsPlacement.TopRight" />

@if (Articulo != null)
{
    <div class="card shadow-lg">
        <div class="shadow-header">
            @*Header*@
            <div class="card-header text-center">
                <h3><strong>Eliminar Articulo</strong></h3>
            </div>
            <div class="card-header text-center">
                <h3 class="text-danger">¿Est&aacute;s seguro de que quieres eliminar este Articulo?</h3>
            </div>

            @*Body*@
            <div>
                <div>
                    <div>
                        <div class="card-header">
                            <h3><strong>Datos del Articulo:</strong></h3>
                        </div>
                        <div class="card-body">
                            <div>
                                <div>
                                    <div class="col-md-6">
                                        <ul class="list-unstyled">
                                            <li><strong>Articulo Id:</strong> @Articulo.ArticuloId</li>
                                            <li><strong>Descripci&oacute;n:</strong> @Articulo.Descripcion</li>
                                            <li><strong>Pct Itbis:</strong> @Articulo.PctItbis</li>
                                            <li><strong>Costo:</strong> @Articulo.Costo</li>
                                            <li><strong>Itbis:</strong> @Articulo.Itbis</li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            @*Footer*@
            <div class="card-footer">
                <button class="btn btn-outline-warning" @onclick="Volver"> <Icon Name=" IconName.Arrow90DegLeft" /> Volver</button>
                <button class="btn btn-outline-danger" @onclick="EliminarArticulo"> <Icon Name=" IconName.Trash" /> Eliminar</button>
            </div>
        </div>
    </div>
}
else
{
    <p>Articulo no encontrado</p>
}


@code {
    [Parameter]
    public int ArticuloId { get; set; }
    public Articulos? Articulo { get; set; } = new Articulos();

    List<ToastMessage> messages = new List<ToastMessage>();

    protected override async Task OnInitializedAsync()
    {
        if (ArticuloId != 0)
        {
            Articulo = await articuloService.Buscar(ArticuloId);
        }
    }

    private void ShowMessage(ToastType toastType, string Message) => messages.Add(CreateToastMessage(toastType, Message));

    private ToastMessage CreateToastMessage(ToastType toastType, string Message)
    => new ToastMessage
        {
            Type = toastType,
            Title = "Notificación",
            HelpText = $"{DateTime.Now}",
            Message = Message,
        };

    public async Task EliminarArticulo()
    {
        if (ArticuloId == 0 || Articulo == null)
        {
            return;
        }

        if (await articuloService.Eliminar(ArticuloId))
        {
            ShowMessage(ToastType.Success, $"El articulo {Articulo.Descripcion} se ha eliminado correctamente");
            await Task.Delay(2000);
            Volver();
        }
        else
            ShowMessage(ToastType.Danger, "Se ha producido un error");
    }

    public void Volver()
    {
        Navigation.NavigateTo("/Articulos/Index");
    }
}
